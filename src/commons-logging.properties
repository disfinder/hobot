#org.apache.commons.logging.Log=org.apache.commons.logging.impl.Log4JLogger
#log4j.configuration=log4j.properties


# Use this system property to specify the name of a Log4J configuration file. If not specified, the default configuration file is log4j.properties.
#log4j.configuration=log4j.properties

#log4j.rootCategory=INFO
#Set the default (root) logger priority.

#log4j.logger.logger.name=priority 
#Set the priority for the named logger and all loggers hierarchically lower than, or below, the named logger. logger.name corresponds to the parameter of LogFactory.getLog(logger.name), used to create the logger instance. Priorities are: DEBUG, INFO, WARN, ERROR, or FATAL.

#Log4J understands hierarchical names, enabling control by package or high-level qualifiers: log4j.logger.org.apache.component=DEBUG will enable debug messages for all classes in both org.apache.component and org.apache.component.sub. Likewise, setting log4j.logger.org.apache.component=DEBUG will enable debug message for all 'component' classes, but not for other Apache projects.
#log4j.appender.appender.Threshold=priority
#Log4J appenders correspond to different output devices: console, files, sockets, and others. If appender's threshold is less than or equal to the message priority then the message is written by that appender. This allows different levels of detail to be appear at di